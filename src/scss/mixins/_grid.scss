$col: 376;
$sm: 576;
$md: 768;
$lg: 992;
$xl: 1200;
$gutter: 30;
$col_quantity: 12;

$grid: $col_quantity;
$gridofsett: $col_quantity;

.container {
  width: 100%;
  padding-right: $gutter / 2 + px;
  padding-left: $gutter / 2 + px;
  margin-right: auto;
  margin-left: auto;
  @media screen and (min-width: $col + px) {
    max-width: ($col - 36) + px;
  }
  @media screen and (min-width: $sm + px) {
    max-width: ($sm - 36) + px;
  }
  @media screen and (min-width: $md + px) {
    max-width: ($md - 48) + px;
  }
  @media screen and (min-width: $lg + px) {
    max-width: ($lg - 32) + px;
  }
  @media screen and (min-width: $xl + px) {
    max-width: $xl + px;
  }

  &-fluid {
    width: 100%;
    padding-right: $gutter / 2 + px;
    padding-left: $gutter / 2 + px;
  }
}

.row {
  display: flex;
  flex-wrap: wrap;
  margin-right: -15px;
  margin-left: -15px;
}

.col,
.col-sm,
.col-md,
.col-lg,
.col-xl {
  flex-basis: 0;
  flex-grow: 1;
  max-width: 100%;
}

$grid-name: col sm md lg xl;

@for $i from 1 through $grid {
  .col-#{$i} {
    flex: 0 0 ($i / $gridofsett) * 100%;
    width: ($i / $gridofsett) * 100%;
    padding-left: $gutter / 2 + px;
    padding-right: $gutter / 2 + px;
    max-width: ($i / $gridofsett) * 100%;
    @media screen and (max-width: $col + px) {
      position: relative;
      flex: 0 0 ($i / $gridofsett) * 100%;
      width: ($i / $gridofsett) * 100%;
      padding-left: $gutter / 2 + px;
      padding-right: $gutter / 2 + px;
      max-width: ($i / $gridofsett) * 100%;
    }
  }
}

@for $i from 1 through $grid {
  .col-sm-#{$i} {
    @media screen and (min-width: $sm + px) {
      flex: 0 0 ($i / $gridofsett) * 100%;
      width: ($i / $gridofsett) * 100%;
      padding-left: $gutter / 2 + px;
      padding-right: $gutter / 2 + px;
      max-width: ($i / $gridofsett) * 100%;
    }
  }
}

@for $i from 1 through $grid {
  .col-md-#{$i} {
    @media screen and (min-width: $md + px) {
      flex: 0 0 ($i / $gridofsett) * 100%;
      width: ($i / $gridofsett) * 100%;
      padding-left: $gutter / 2 + px;
      padding-right: $gutter / 2 + px;
      max-width: ($i / $gridofsett) * 100%;
    }
  }
}

@for $i from 1 through $grid {
  .col-lg-#{$i} {
    @media screen and (min-width: $lg + px) {
      flex: 0 0 ($i / $gridofsett) * 100%;
      width: ($i / $gridofsett) * 100%;
      padding-left: $gutter / 2 + px;
      padding-right: $gutter / 2 + px;
      max-width: ($i / $gridofsett) * 100%;
    }
  }
}

@for $i from 1 through $grid {
  .col-xl-#{$i} {
    @media screen and (min-width: $xl + px) {
      flex: 0 0 ($i / $gridofsett) * 100%;
      width: ($i / $gridofsett) * 100%;
      padding-left: $gutter / 2 + px;
      padding-right: $gutter / 2 + px;
      max-width: ($i / $gridofsett) * 100%;
    }
  }
}

@for $i from 0 through $grid - 1 {
  @each $grid in $grid-name {
    @if $grid == "xl" {
      .offset-xl-#{$i} {
        margin-left: ($i * (1 / $gridofsett)) * 100%;
        @media screen and (min-width: $xl + px) {
          margin-left: ($i * (1 / $gridofsett)) * 100%;
        }
      }
    } @else if $grid == "lg" {
      .offset-lg-#{$i} {
        margin-left: ($i * (1 / $gridofsett)) * 100%;
        @media screen and (min-width: $lg + px) {
          margin-left: ($i * (1 / $gridofsett)) * 100%;
        }
      }
    } @else if $grid == "md" {
      .offset-md-#{$i} {
        margin-left: ($i * (1 / $gridofsett)) * 100%;
        @media screen and (min-width: $md + px) {
          margin-left: ($i * (1 / $gridofsett)) * 100%;
        }
      }
    } @else if $grid == "sm" {
      .offset-sm-#{$i} {
        margin-left: ($i * (1 / $gridofsett)) * 100%;
        @media screen and (min-width: $sm + px) {
          margin-left: ($i * (1 / $gridofsett)) * 100%;
        }
      }
    } @else if $grid == "col" {
      .offset-#{$i} {
        margin-left: ($i * (1 / $gridofsett)) * 100%;
        @media screen and (max-width: $col + px) {
          margin-left: ($i * (1 / $gridofsett)) * 100%;
        }
      }
    }
  }
}
